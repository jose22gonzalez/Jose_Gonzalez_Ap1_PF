@page "/R_Profesor"
@inject IToastService toastService

<EditForm Model="profesores" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div className="Container">
        <div class="card align-items-center">
            <div class="card">
                <div class="card-header">
                    <h3>Registros de Profesor</h3>
                </div>
                <div class="card-body">
                    <form>
                        @*GrupoId*@
                        <div class="form-row align-items-center">
                            <div class="col">
                                <div class="form-group">
                                    <label>Profesor Id</label>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="profesores.ProfesorId" class="form-control col-4" />
                                        <div>
                                            <button type="button"
                                                class="btn btn-primary input-group-text oi oi-magnifying-glass"
                                                @onclick="Buscar">Buscar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*Nombre*@
                        <div class="form-group">
                            <label>Nombre</label>
                            <InputText @bind-Value="profesores.Nombre" class="form-control col-4" />
                        </div>

                        @*Curso*@
                        <div class="flex-fill mx-2">
                            <label>Descripcion Curso</label>
                            <InputSelect @bind-Value="grupos.GrupoId" class="form-control">

                                @foreach (var item in lista)
                                {
                                    <option value="@item.GrupoId">@item.DescripcionCurso</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group">
                            <label>Descripcion Curso</label>
                            <InputText readonly @bind-Value="profesores.DescripcionCurso" class="form-control col-4" />
                        </div>
                    </form>
                </div>
                <div class="card-footer">
                    @*Botones de registros*@
                    <div class="form-group text-center" display: inline-block>
                        <button type="button" class="btn btn-lg btn-primary oi oi-pencil"
                            @onclick="Nuevo">Nuevo</button>
                        <button type="submit" class="btn btn-lg btn-success oi oi-plus">Guardar</button>
                        <button type="button" class="btn btn-lg btn-danger oi oi-trash"
                            @onclick="Eliminar">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{

    Profesores profesores = new Profesores();
     Grupos grupos = new Grupos();
     public List<Grupos> lista = new List<Grupos>();
    [Inject]
    public ProfesoresBBL profesoresBBL { get; set; }
    [Inject]
    public GruposBBL gruposBBL {get;set;}

    protected override void OnInitialized()
    {
        Buscar();
        lista = gruposBBL.GetList(c => true);
    }

    public void Buscar()
    {
        if (this.profesores.ProfesorId > 0)
        {
            Profesores? encontrado = profesoresBBL.Buscar(this.profesores.ProfesorId);
            if (encontrado != null)
            {
                this.profesores = encontrado;
                toastService.ShowInfo("A sido encontrado con exito");
            }
            else
            {
                toastService.ShowError("No se pudo encontrar con exitos");
            }
        }
    }

    public void Nuevo()
    {
        profesores = new Profesores();
    }

    public void Guardar()
    {
        Grupos? encontrado = gruposBBL.Buscar(this.grupos.GrupoId);
        this.grupos = encontrado;
        profesores.DescripcionCurso = grupos.DescripcionCurso;
        profesores.GrupoId = grupos.GrupoId;
        if (profesoresBBL.Guardar(profesores))
        {
            toastService.ShowSuccess("Se ha guardado correctamente");
            Nuevo();
        }
        else
        {
            toastService.ShowError("No se guardo correctamente");
        }
    }

    public void Eliminar()
    {
        if (profesoresBBL.Eliminar(profesores.ProfesorId))
        {
            toastService.ShowSuccess("Se ha eliminado correctamente");
            Nuevo();
        }
        else
        {
            toastService.ShowError("No se ha eliminado correctamente");
        }
    }
}